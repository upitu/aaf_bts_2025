services:
  frontend:
    image: ghcr.io/upitu/aaf_bts_2025/frontend:${TAG:-dev}
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:80"
    env_file:
      - ./.env

  backend:
    image: ghcr.io/upitu/aaf_bts_2025/backend:${TAG:-dev}
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:8000"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Always mount to /app/uploads in the container
      - uploads_data:/app/uploads

  db:
    image: postgres:15-alpine
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  vault:
    image: hashicorp/vault:latest
    ports:
      - "${VAULT_PORT}:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK

volumes:
  # Static keys, dynamic *actual* names via 'name:'
  uploads_data:
    name: ${UPLOADS_VOLUME_NAME:-uploads_data}
  postgres_data: